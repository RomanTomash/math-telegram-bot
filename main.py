import os
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –î—É–±–ª—å-—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞: –ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω–µ—Ç - —Ö–∞—Ä–¥–∫–æ–¥
BOT_TOKEN = os.getenv('BOT_TOKEN') or "7587417908:AAEt19K7Z2CWro6sZc8ad8lF8fPYKYe05YM"
ADMIN_IDS = [int(x) for x in os.getenv('ADMIN_IDS', '452601108').split(',')]

print("=== BOT STARTING ===")
print(f"Token: {'‚úÖ FROM ENV' if os.getenv('BOT_TOKEN') else '‚úÖ HARDCODED'}")

logging.basicConfig(level=logging.INFO)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('üéâ –ë–æ—Ç –ó–ê–ü–£–©–ï–ù! Amvera —Ä–∞–±–æ—Ç–∞–µ—Ç!')

try:
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    
    print("ü§ñ Bot starting polling...")
    application.run_polling()
    
except Exception as e:
    print(f"‚ùå Error: {e}")
    import traceback
    traceback.print_exc()
